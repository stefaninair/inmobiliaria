// <auto-generated />
using System;
using Inmobiliaria.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace inmobiliaria.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Inmobiliaria.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreadoPorUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaTerminacionAnticipada")
                        .HasColumnType("TEXT");

                    b.Property<int>("InmuebleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InquilinoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MontoMensual")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Multa")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TerminadoEn")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TerminadoPorUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreadoPorUserId");

                    b.HasIndex("InmuebleId");

                    b.HasIndex("InquilinoId");

                    b.HasIndex("TerminadoPorUserId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Inmueble", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ambientes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disponible")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Portada")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<int>("PropietarioId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Superficie")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoInmuebleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PropietarioId");

                    b.HasIndex("TipoInmuebleId");

                    b.ToTable("Inmuebles");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Inquilino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Inquilinos");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AnuladoEn")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AnuladoPorUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContratoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreadoPorUserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EliminadoEn")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EliminadoPorUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Monto")
                        .HasColumnType("TEXT");

                    b.Property<string>("MotivoAnulacion")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AnuladoPorUserId");

                    b.HasIndex("ContratoId");

                    b.HasIndex("CreadoPorUserId");

                    b.HasIndex("EliminadoPorUserId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Propietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Propietarios");
                });

            modelBuilder.Entity("Inmobiliaria.Models.TipoInmueble", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TiposInmueble");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AvatarPath")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaveHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Rol")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Contrato", b =>
                {
                    b.HasOne("Inmobiliaria.Models.Usuario", "CreadoPorUser")
                        .WithMany()
                        .HasForeignKey("CreadoPorUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.Inmueble", "Inmueble")
                        .WithMany()
                        .HasForeignKey("InmuebleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.Inquilino", "Inquilino")
                        .WithMany()
                        .HasForeignKey("InquilinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.Usuario", "TerminadoPorUser")
                        .WithMany()
                        .HasForeignKey("TerminadoPorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreadoPorUser");

                    b.Navigation("Inmueble");

                    b.Navigation("Inquilino");

                    b.Navigation("TerminadoPorUser");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Inmueble", b =>
                {
                    b.HasOne("Inmobiliaria.Models.Propietario", "Propietario")
                        .WithMany()
                        .HasForeignKey("PropietarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.TipoInmueble", "TipoInmueble")
                        .WithMany()
                        .HasForeignKey("TipoInmuebleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propietario");

                    b.Navigation("TipoInmueble");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Pago", b =>
                {
                    b.HasOne("Inmobiliaria.Models.Usuario", "AnuladoPorUser")
                        .WithMany()
                        .HasForeignKey("AnuladoPorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Inmobiliaria.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.Usuario", "CreadoPorUser")
                        .WithMany()
                        .HasForeignKey("CreadoPorUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.Usuario", "EliminadoPorUser")
                        .WithMany()
                        .HasForeignKey("EliminadoPorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AnuladoPorUser");

                    b.Navigation("Contrato");

                    b.Navigation("CreadoPorUser");

                    b.Navigation("EliminadoPorUser");
                });
#pragma warning restore 612, 618
        }
    }
}
