@model Inmobiliaria.Models.Inmueble

@{
    ViewData["Title"] = "Detalles del Inmueble";
}

<h1>Detalles del Inmueble</h1>
<hr />

<div class="row">
    <div class="col-md-6">
        <table class="table table-bordered">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Id)</th>
                <td>@Model.Id</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Direccion)</th>
                <td>@Model.Direccion</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Ambientes)</th>
                <td>@Model.Ambientes</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Uso)</th>
                <td>@Model.Uso</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Superficie)</th>
                <td>@Model.Superficie m²</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Precio)</th>
                <td>@Model.Precio.ToString("C")</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Disponible)</th>
                <td>@(Model.Disponible ? "Sí" : "No")</td>
            </tr>
            <tr>
                <th>Propietario</th>
                <td>@Model.Propietario?.Nombre @Model.Propietario?.Apellido</td>
            </tr>
            <tr>
                <th>Tipo de Inmueble</th>
                <td>@Model.TipoInmueble?.Nombre</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Observaciones)</th>
                <td>@Model.Observaciones</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Latitud)</th>
                <td>@Model.Latitud</td>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Longitud)</th>
                <td>@Model.Longitud</td>
            </tr>
            <tr>
                <th>Habilitado</th>
                <td>@(Model.Habilitado ? "Sí" : "No")</td>
            </tr>
            @if (!string.IsNullOrEmpty(Model.Portada))
            {
                <tr>
                    <th>Imagen</th>
                    <td>
                        <img src="~/img/@Model.Portada" alt="Imagen del inmueble" class="img-fluid" style="max-width: 300px;" />
                    </td>
                </tr>
            }
        </table>

        <div class="btn-group" role="group">
            <a class="btn btn-secondary" asp-action="Index">
                <i class="fa-solid fa-arrow-left"></i> Volver al listado
            </a>
            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id">
                <i class="fa-solid fa-pen"></i> Editar
            </a>
            @if (User.IsInRole("Administrador"))
            {
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@Model.Id">
                    <i class="fa-solid fa-trash-can"></i> Eliminar
                </a>
            }
        </div>
    </div>
    <div class="col-md-6">
        <div class="mt-4">
            <h4>Ubicación en el mapa</h4>
            <div id="mapa" style="height: 400px; width: 100%; border: 1px solid #ccc; border-radius: 5px;"></div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <!-- Leaflet JavaScript -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    
    <script type="text/javascript">
        const lat = @Model?.Latitud.ToString("0.######", System.Globalization.CultureInfo.InvariantCulture) ?? "0";
        const lng = @Model?.Longitud.ToString("0.######", System.Globalization.CultureInfo.InvariantCulture) ?? "0";
        const direccion = '@(Model?.Direccion ?? "")';

        $(document).ready(function() {
            if (lat !== "0" && lng !== "0") {
                // Cargar el mapa con Leaflet
                const map = L.map('mapa').setView([lat, lng], 16);
                
                // Agregar capa de tiles de OpenStreetMap
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '© OpenStreetMap contributors'
                }).addTo(map);

                // Agregar marcador en la ubicación del inmueble
                L.marker([lat, lng]).addTo(map)
                    .bindPopup(direccion || "Ubicación desconocida")
                    .openPopup();
            } else {
                // Si no hay coordenadas, mostrar mensaje
                $('#mapa').html('<div class="d-flex align-items-center justify-content-center h-100"><p class="text-muted p-3 text-center">Ubicación no disponible.<br/>No se han configurado coordenadas para este inmueble.</p></div>');
            }
        });
    </script>
}
